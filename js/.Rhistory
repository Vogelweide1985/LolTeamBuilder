fun <- vec^3
test = data.frame(vec,fun)
plot(test)
fun1 <- 2*vec^2
test = data.frame(vec,fun1)
plot(test)
fun2 <- 4*vec
test = data.frame(vec,fu2)
plot(test)
fun2 <- 4*vec
test = data.frame(vec,fun2)
plot(test)
vec <- seq(-100,100)
fun <- vec^3
test = data.frame(vec,fun)
plot(test)
fun1 <- 2*vec^2
test = data.frame(vec,fun1)
plot(test)
fun2 <- 4*vec
test = data.frame(vec,fun2)
plot(test)
vec <- seq(0,100)
fun <- vec^3
test = data.frame(vec,fun)
plot(test)
fun1 <- 2*vec^2
test = data.frame(vec,fun1)
plot(test)
fun2 <- 4*vec
test = data.frame(vec,fun2)
plot(test)
vec = seq(-5,5, step =0.1)
y = vec*vec +vec
plot(x,y)
plot(vec,y)
install.packages(c("acepack", "assertthat", "AzureML", "BH", "brglm", "car", "caret", "chron", "coda", "colorspace", "curl", "data.table", "DBI", "digest", "dplyr", "e1071", "evaluate", "formatR", "Formula", "FSelector", "gbm", "ggplot2", "ggthemes", "glmnet", "Hmisc", "htmltools", "httr", "igraph", "irlba", "jsonlite", "knitr", "lme4", "LogicReg", "lubridate", "markdown", "MDPtoolbox", "memoise", "mime", "miniCRAN", "neuralnet", "nlme", "NLP", "openssl", "pbkrtest", "pROC", "proto", "quantreg", "R6", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "reshape", "reshape2", "rmarkdown", "RSQLite", "runjags", "RWeka", "RWekajars", "scales", "selectr", "SparseM", "sqldf", "stringi", "stringr", "tibble", "tm", "XML", "xml2", "yaml"))
install.packages("httr")
require(httr)
install.packages(c("bindrcpp", "bit64", "brglm", "checkmate", "curl", "dplyr", "glmnet", "glue", "Hmisc", "htmltools", "igraph", "irlba", "jsonlite", "lme4", "pROC", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "RSQLite", "SparseM", "tibble", "XML"))
require(httr)
require(jsonlite)
require(httr)
install.packages("httr")
require(httr)
require(jsonlite)
url <- paste(url, API_KEY, sep = "")
API_KEY <- "RGAPI-48be103e-08af-4652-8df9-f26aaaec1c35"
url <- "https://euw1.api.riotgames.com/lol/platform/v3/champions?freeToPlay=false&api_key="
url <- paste(url, API_KEY, sep = "")
url
df <- GET(url)
fd
df
df[[1]]
df[[2]]
df$content
API_KEY <- "RGAPI-48be103e-08af-4652-8df9-f26aaaec1c35"
url <- "https://euw1.api.riotgames.com/lol/static-data/v3/champions?locale=en_US&dataById=false&api_key="
url <- paste(url, API_KEY, sep = "")
df <- GET(url)
df$content
df
df
API_KEY <- "RGAPI-48be103e-08af-4652-8df9-f26aaaec1c35"
url <- "https://euw1.api.riotgames.com/lol/static-data/v3/champions/1?locale=en_US&tags=image&api_key="
url <- paste(url, API_KEY, sep = "")
df <- GET(url)
df
df$content
plot(df$content)
df$request
df <-rawToChar(df$content)
df
require(httr)
require(jsonlite)
API_KEY <- "RGAPI-48be103e-08af-4652-8df9-f26aaaec1c35"
champions_url <- "https://euw1.api.riotgames.com/lol/static-data/v3/champions?locale=en_US&tags=image&dataById=false&api_key="
url <- paste(champions_url, API_KEY, sep = "")
champ.df <- GET(url)
df <-rawToChar(df$content)
champ.df <-rawToChar(champ.df$content)
champ.df
champ.df <-toJSON(champ.df)
champ.df
require(jsonlite)
require(httr)
require(jsonlite)
API_KEY <- "RGAPI-48be103e-08af-4652-8df9-f26aaaec1c35"
champions_url <- "https://euw1.api.riotgames.com/lol/static-data/v3/champions?locale=en_US&tags=image&dataById=false&api_key="
url <- paste(champions_url, API_KEY, sep = "")
champ.df <- GET(url)
champ.df <-rawToChar(champ.df$content)
champ.df <-toJSON(champ.df)
champ.df
require(httr)
require(jsonlite)
API_KEY <- "RGAPI-48be103e-08af-4652-8df9-f26aaaec1c35"
champions_url <- "https://euw1.api.riotgames.com/lol/static-data/v3/champions?locale=en_US&tags=image&dataById=false&api_key="
url <- paste(champions_url, API_KEY, sep = "")
champ.df <- GET(url)
champ.df <-rawToChar(champ.df$content)
champ.df <-toJSON(champ.df)
champ.df
require(httr)
require(jsonlite)
API_KEY <- "RGAPI-48be103e-08af-4652-8df9-f26aaaec1c35"
champions_url <- "https://euw1.api.riotgames.com/lol/static-data/v3/champions?locale=en_US&tags=image&dataById=false&api_key="
url <- paste(champions_url, API_KEY, sep = "")
champ.df <- GET(url)
champ.df <-rawToChar(champ.df$content)
champ.df <-fromJSON(champ.df)
champ.df
champ.df$data
champ.df <- champ.df$data
require(httr)
require(jsonlite)
API_KEY <- "RGAPI-48be103e-08af-4652-8df9-f26aaaec1c35"
champions_url <- "https://euw1.api.riotgames.com/lol/static-data/v3/champions?locale=en_US&tags=image&dataById=false&api_key="
url <- paste(champions_url, API_KEY, sep = "")
champ.df <- GET(url)
champ.df <-rawToChar(champ.df$content)
champ.df <-fromJSON(champ.df)
champ.df <- champ.df$data
champ.df[1]
champ.df[[1]
champ.df[[1]]
champ.df[[1]]
champ.df[[1]][1]
square_png = length(champ.df)
square_png = list(length(champ.df))
square_png = df(length(champ.df))
square_png <- rep("", length(champ.df))
champ.df[[1]][1]
champ.df[[1]][2]
champ.df[[1]][3]
require(httr)
require(jsonlite)
API_KEY <- "RGAPI-48be103e-08af-4652-8df9-f26aaaec1c35"
#Get Champions
champions_url <- "https://euw1.api.riotgames.com/lol/static-data/v3/champions?locale=en_US&tags=image&dataById=false&api_key="
url <- paste(champions_url, API_KEY, sep = "")
champ.df <- GET(url)
champ.df <-rawToChar(champ.df$content)
champ.df <-fromJSON(champ.df)
champ.df <- champ.df$data
# Get Image Names
len <- length(champ.df)
image_png <- rep("", len )
square_png <- rep("", len )
name_png <- rep("", len )
for (i in 1: len) {
image_png[i] <- blub
}
champ.df[[1]][3]
champ.df[[1]][1]
champ.df[[1]][2]
champ.df[[1]][3]
champ.df[[1]][2]
champ.df[[1]][3]
champ.df[[1]][4]
champ.df[[1]][5]
champ.df[[1]][5][1]
champ.df[[1]][[5][1]
champ.df[[1]][[5]][1]
champ.df[[1]][[5]][2]
len <- length(champ.df)
image_png <- rep("", len )
square_png <- rep("", len )
name_png <- rep("", len )
for (i in 1: len) {
image_png[i]  <- champ.df[[i]][[5]][1]
square_png[i] <- champ.df[[i]][[5]][2]
name_png[i]   <- champ.df[[i]][3]
}
name_png
as.vector(name_png)
as.vector(name_png)
champ.df[[i]][[5]][1]
1
champ.df[[2]][[5]][1]
champ.df[[2]][[5]][[1]]
len <- length(champ.df)
image_png <- rep("", len )
square_png <- rep("", len )
name_png <- rep("", len )
for (i in 1: len) {
image_png[i]  <- champ.df[[i]][[5]][[1]]
square_png[i] <- champ.df[[i]][[5]][[2]]
name_png[i]   <- champ.df[[i]][[3]]
}
require(httr)
require(jsonlite)
API_KEY <- "RGAPI-1294055d-31a7-46f9-9f56-6df0434c1469"
#Get Champions
champions_url <- "https://euw1.api.riotgames.com/lol/static-data/v3/champions?locale=en_US&tags=image&dataById=false&api_key="
url <- paste(champions_url, API_KEY, sep = "")
champ.df <- GET(url)
champ.df <-rawToChar(champ.df$content)
champ.df <-fromJSON(champ.df)
champ.df <- champ.df$data
# Get Image Names
len <- length(champ.df)
image_png <- rep("", len )
square_png <- rep("", len )
name_png <- rep("", len )
for (i in 1: len) {
image_png[i] <- blub
}
champ.df[[1]][3]
API_KEY <- "RGAPI-1294055d-31a7-46f9-9f56-6df0434c1469"
#Get Champions
champions_url <- "https://euw1.api.riotgames.com/lol/static-data/v3/champions?locale=en_US&tags=image&dataById=false&api_key="
url <- paste(champions_url, API_KEY, sep = "")
champ.df <- GET(url)
champ.df <-rawToChar(champ.df$content)
champ.df <-fromJSON(champ.df)
champ.df <- champ.df$data
champ.df[[1]][[3]][1]
champ.df[[1]][[3]][1]
champ.df[[1]][[3]][2]
champ.df[[1]][[3]][3]
champ.df[[1]][[3]][4]
champ.df[[1]][[3]][5]
champ.df[[1]]$name
champ.df[[1]]$image
champ.df[[1]][[4]]
champ.df[[1]][[5]]
champ.df[[1]][[5]][1]
len <- length(champ.df)
image_png <- rep("", len )
square_png <- rep("", len )
name <- rep("", len )
for (i in 1: len) {
image_png[i] <- champ.df[[i]][[5]][1]
square_png[i] <- champ.df[[i]][[5]][2]
name[i] <- champ.df[[i]][[3]][1]
}
len <- length(champ.df)
image_png <- rep("", len )
square_png <- rep("", len )
name <- rep("", len )
for (i in 1: len) {
image_png[i] <- champ.df[[i]][[5]][[1]]
square_png[i] <- champ.df[[i]][[5]][[2]]
name[i] <- champ.df[[i]][[3]][1]
}
require(httr)
require(jsonlite)
API_KEY <- "RGAPI-1294055d-31a7-46f9-9f56-6df0434c1469"
#Get Champions
champions_url <- "https://euw1.api.riotgames.com/lol/static-data/v3/champions?locale=en_US&tags=image&dataById=false&api_key="
url <- paste(champions_url, API_KEY, sep = "")
champ.df <- GET(url)
champ.df <-rawToChar(champ.df$content)
champ.df <-fromJSON(champ.df)
champ.df <- champ.df$data
# Get Image Names
len <- length(champ.df)
image_png <- rep("", len )
square_png <- rep("", len )
name <- rep("", len )
for (i in 1: len) {
image_png[i] <- champ.df[[i]][[5]][[1]]
square_png[i] <- champ.df[[i]][[5]][[2]]
name[i] <- champ.df[[i]][[3]][1]
}
require(httr)
require(jsonlite)
API_KEY <- "RGAPI-1294055d-31a7-46f9-9f56-6df0434c1469"
#Get Champions
champions_url <- "https://euw1.api.riotgames.com/lol/static-data/v3/champions?locale=en_US&tags=image&dataById=false&api_key="
url <- paste(champions_url, API_KEY, sep = "")
champ.df <- GET(url)
champ.df <-rawToChar(champ.df$content)
champ.df <-fromJSON(champ.df)
champ.df <- champ.df$data
# Get Image Names
len <- length(champ.df)
image_png <- rep("", len )
square_png <- rep("", len )
name <- rep("", len )
for (i in 1: len) {
image_png[i] <- champ.df[[i]][[5]][[1]]
square_png[i] <- champ.df[[i]][[5]][[2]]
name[i] <- champ.df[[i]][[3]][1]
}
champ.df <- data.frame(name = name, image_png = image_png, square_png = square_png)
View(champ.df)
View(champ.df)
View(champ.df)
require(httr)
require(jsonlite)
API_KEY <- "RGAPI-1294055d-31a7-46f9-9f56-6df0434c1469"
#Get Champions
champions_url <- "https://euw1.api.riotgames.com/lol/static-data/v3/champions?locale=en_US&tags=all&dataById=true"
url <- paste(champions_url, API_KEY, sep = "")
champ.df <- GET(url)
champ.df <-rawToChar(champ.df$content)
champ.df <-fromJSON(champ.df)
champ.df <- champ.df$data
url <- paste(realm_url, API_KEY, sep="")
realm_url <- "https://euw1.api.riotgames.com/lol/static-data/v3/realms?api_key="
url <- paste(realm_url, API_KEY, sep="")
require(httr)
require(jsonlite)
API_KEY <- "RGAPI-1294055d-31a7-46f9-9f56-6df0434c1469"
DDragon <- "http://ddragon.leagueoflegends.com/cdn/img/champion/"
#Get Champions
champions_url <- "https://euw1.api.riotgames.com/lol/static-data/v3/champions?locale=en_US&tags=all&dataById=true"
url <- paste(champions_url, API_KEY, sep = "")
champ.df <- GET(url)
champ.df <-rawToChar(champ.df$content)
champ.df <-fromJSON(champ.df)
require(httr)
require(jsonlite)
API_KEY <- "RGAPI-1294055d-31a7-46f9-9f56-6df0434c1469"
DDragon <- "http://ddragon.leagueoflegends.com/cdn/img/champion/"
#Get Champions
champions_url <- "https://euw1.api.riotgames.com/lol/static-data/v3/champions?locale=en_US&tags=image&dataById=true&api_key="
url <- paste(champions_url, API_KEY, sep = "")
champ.df <- GET(url)
champ.df <-rawToChar(champ.df$content)
champ.df <-fromJSON(champ.df)
champ.df$type
champ.df$version
realm_version <- champ.df$version
champ.df <- champ.df$data
len <- length(champ.df)
image_png <- rep("", len )
square_png <- rep("", len )
name <- rep("", len )
for (i in 1: len) {
image_png[i] <- champ.df[[i]][[5]][[1]]
square_png[i] <- champ.df[[i]][[5]][[2]]
name[i] <- champ.df[[i]][[3]][1]
}
champ.df <- data.frame(name = name, image_png = image_png, square_png = square_png)
realm_version
link = "http://ddragon.leagueoflegends.com/cdn/7.16.1/img/champion/Aatrox.png"
test <- download.file(link,basename(link))
getwd()
require(httr)
require(jsonlite)
API_KEY <- "RGAPI-b2632aa5-49a9-4169-9f81-8c435c8bd72e"
DDragon <- "http://ddragon.leagueoflegends.com/cdn/img/champion/"
#Get Champions
champions_url <- "https://euw1.api.riotgames.com/lol/static-data/v3/champions?locale=en_US&tags=image&dataById=true&api_key="
url <- paste(champions_url, API_KEY, sep = "")
champ.df <- GET(url)
champ.df <-rawToChar(champ.df$content)
champ.df <-fromJSON(champ.df)
realm_version <- champ.df$version
champ.df <- champ.df$data
# Get Image Names
len <- length(champ.df)
square_png <- rep("", len )
name <- rep("", len )
for (i in 1: len) {
square_png[i] <- champ.df[[i]][[5]][[1]]
name[i] <- champ.df[[i]][[3]][1]
}
champ.df <- data.frame(name = name, square_png = square_png, image_png = gsub(".png", "_0.jpg", square_png), stringsAsFactors = F)
champ.df <- champ.df[order(champ.df$name),]
#Set Image wds
path <-  "F:/GoogleDrive/WebApps/LolTeamBuilder"
wd_full_png <- paste(path,"img","riot", "full", sep="/")
wd_square_png <- paste(path,"img","riot", "square", sep="/")
getwd()
#Download Files Squares
ddragon <- paste("http://ddragon.leagueoflegends.com/cdn", realm_version, "img/champion/", sep ="/")
setwd(wd_square_png )
for ( i in 1:nrow(champ.df)) {
link <- paste(ddragon, champ.df$square_png[i], sep="")
download.file(link, champ.df$square_png[i], method = "wininet", mode = "wb")
}
#Download Files Loading Screen
ddragon_full_jpg <- "http://ddragon.leagueoflegends.com/cdn/img/champion/loading/"
setwd(wd_full_png )
for ( i in 1:nrow(champ.df)) {
link <- paste(ddragon_full_jpg, champ.df$image_png[i], sep="")
download.file(link, champ.df$image_png[i], method = "wininet", mode = "wb")
#setwd(wd_square_png )
#link <- paste(ddragon, square_png[i], sep="")
#download.file(link, name[i], method = "wininet", mode = "wb")
}
require(httr)
require(jsonlite)
API_KEY <- "RGAPI-b2632aa5-49a9-4169-9f81-8c435c8bd72e"
DDragon <- "http://ddragon.leagueoflegends.com/cdn/img/champion/"
#Get Champions
champions_url <- "https://euw1.api.riotgames.com/lol/static-data/v3/champions?locale=en_US&tags=image&dataById=true&api_key="
url <- paste(champions_url, API_KEY, sep = "")
champ.df <- GET(url)
champ.df <-rawToChar(champ.df$content)
champ.df <-fromJSON(champ.df)
realm_version <- champ.df$version
realm_version
champ.df <- champ.df$data
len <- length(champ.df)
square_png <- rep("", len )
name <- rep("", len )
for (i in 1: len) {
square_png[i] <- champ.df[[i]][[5]][[1]]
name[i] <- champ.df[[i]][[3]][1]
}
champ.df2 <- data.frame(name = name, square_png = square_png, image_png = gsub(".png", "_0.jpg", square_png), stringsAsFactors = F)
champ.df2 <- champ.df[order(champ.df2$name),]
champ.df2 <- champ.df2[order(champ.df2$name),]
View(champ.df2)
#Set Image wds
path <-  "F:/GoogleDrive/WebApps/LolTeamBuilder"
wd_full_png <- paste(path,"img","riot", "full", sep="/")
wd_square_png <- paste(path,"img","riot", "square", sep="/")
getwd()
#Download Files Squares
ddragon <- paste("http://ddragon.leagueoflegends.com/cdn", realm_version, "img/champion/", sep ="/")
setwd(wd_square_png )
for ( i in 1:nrow(champ.df)) {
link <- paste(ddragon, champ.df$square_png[i], sep="")
download.file(link, champ.df$square_png[i], method = "wininet", mode = "wb")
}
#Set Image wds
path <-  "F:/GoogleDrive/WebApps/LolTeamBuilder"
wd_full_png <- paste(path,"img","riot", "full", sep="/")
wd_square_png <- paste(path,"img","riot", "square", sep="/")
getwd()
#Download Files Squares
ddragon <- paste("http://ddragon.leagueoflegends.com/cdn", realm_version, "img/champion/", sep ="/")
setwd(wd_square_png )
for ( i in 1:nrow(champ.df2)) {
link <- paste(ddragon, champ.df2$square_png[i], sep="")
download.file(link, champ.df2$square_png[i], method = "wininet", mode = "wb")
}
#Download Files Loading Screen
ddragon_full_jpg <- "http://ddragon.leagueoflegends.com/cdn/img/champion/loading/"
setwd(wd_full_png )
for ( i in 1:nrow(champ.df2)) {
link <- paste(ddragon_full_jpg, champ.df2$image_png[i], sep="")
download.file(link, champ.df2$image_png[i], method = "wininet", mode = "wb")
#setwd(wd_square_png )
#link <- paste(ddragon, square_png[i], sep="")
#download.file(link, name[i], method = "wininet", mode = "wb")
}
champ.df2$rng1 <- rnorm(nrow(champ.df2))
champ.df2$rng1 <- rnorm(nrow(champ.df2))
champ.df2$rng2 <- rnorm(nrow(champ.df2))
champ.df2$rng3 <- rnorm(nrow(champ.df2))
champ.df2$rng4 <- rnorm(nrow(champ.df2))
champ.df2$rng5 <- rnorm(nrow(champ.df2))
champ.df2$rng6 <- rnorm(nrow(champ.df2))
View(champ.df2)
champ.json <-toJSON(champ.df2)
wd_json_file <-  paste(path,"js", sep="/")
wd_json_file
sink("json.txt")
getwd()
getwd()
sink()
getwd()
sink("json.txt")
cat(champ.josn)
sink()
sink()
sink("json.txt")
cat(champ.json)
sink()
#Json Dataframe
setwd(wd_json_file)
sink("json.txt")
cat(champ.json)
sink()
#Json Dataframe
setwd(wd_json_file)
sink("data.json")
cat(champ.json)
sink()
View(champ.df2)
champ.json <-toJSON(champ.df2, dataframe = "columns")
n Dataframe
setwd(wd_json_file)
sink("data.json")
cat(champ.json)
sink()
champ.json <-toJSON(champ.df2)
#Json Dataframe
setwd(wd_json_file)
sink("data.json")
cat(champ.json)
sink()
View(champ.df2)
champ.json <-toJSON(champ.df2, raw="base64")
#Json Dataframe
setwd(wd_json_file)
sink("data.json")
cat(champ.json)
sink()
champ.json <- serializeJSON(champ.df2)
#Json Dataframe
setwd(wd_json_file)
sink("data.json")
cat(champ.json)
sink()
champ.json <-toJSON(encode(champ.df2))
champ.json <-toJSON(Encode(champ.df2))
champ.json <-toJSON(URLencode(champ.df2))
champ.json <-toJSON(champ.df2)
#Json Dataframe
setwd(wd_json_file)
sink("data.json")
cat(champ.json)
sink()
